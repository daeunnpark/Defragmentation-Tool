§pp§§

char* FIRST_BLKP(void* bp){
	while(GET_ID(bp)!=NULL){
		if(GET_ID(bp)==0 && GET_SIZE(bp)==128){
			break;

		}//else{
		bp= PREV_BLKP(bp);

	}
	return bp;
	}


//MAXSIZEbuf can be modified!! put as args?
//Returns first block with ID
char* FIRST_ID_BLKP(void* bp, int ID){

	int currentSIZEbuf = 0;
	while (currentSIZEbuf < MAXSIZEbuf){
		if(GET_ID(bp)!=ID){
			bp = NEXT_BLKP(bp);
			currentSIZEbuf+=GET_SIZE(bp);
		}else{
			return bp;

		}

	}

	return NULL;
}



*void PACK(){



}
*void PACK(){



}*void PACK(){



}
*void PACK(){



}
*void PACK(){



}
*void PACK(){



}


/*
	printf("SIZE: %d ID : %d ALLOC : %d \n", GET_SIZE(ram), GET_ID(ram), GET_ALLOC(ram));
	ram = NEXT_BLKP(ram);
	printf("NEXT SIZE: %d ID : %d ALLOC : %d \n", GET_SIZE(ram), GET_ID(ram), GET_ALLOC(ram));
	


void* temp = SWAP(PREV_BLKP(ram), ram);

	printf("AFSWAP SIZE: %d ID : %d ALLOC : %d \n", GET_SIZE(temp), GET_ID(temp), GET_ALLOC(temp));
	ram = NEXT_BLKP(ram);
	printf("NEXT SIZE: %d ID : %d ALLOC : %d \n", GET_SIZE(ram), GET_ID(ram), GET_ALLOC(ram));
	

*/

